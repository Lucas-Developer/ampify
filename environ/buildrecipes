#! /usr/bin/env python

# Public Domain (-) 2010-2012 The Ampify Authors.
# See the Ampify UNLICENSE file for details.

"""The redpill build recipes for Ampify."""

# ------------------------------------------------------------------------------
# ampify
# ------------------------------------------------------------------------------

RECIPES['ampify'] = [{
    'type': 'git',
    'requires': ['go', 'golibs'],
    'path': ROOT,
    'before': lambda: chdir(join(SRC, 'amp')),
    'commands': [
        [MAKE, 'install']
        ]
    }]

# ------------------------------------------------------------------------------
# bsdiff
# ------------------------------------------------------------------------------

def install_bsdiff():
    copy('bsdiff', join(BIN, 'bsdiff'))
    copy('bspatch', join(BIN, 'bspatch'))

RECIPES['bsdiff'] = [{
    'requires': ['bzip2'],
    'version': '4.3',
    'hash': '6f43c5246cdb60e58134144b72328918eb4a23c2a28880914f3431a76fbf657b',
    'after': install_bsdiff,
    'commands': [
        [MAKE],
        ]
    }]

# ------------------------------------------------------------------------------
# bzip2
# ------------------------------------------------------------------------------

if PLATFORM == 'darwin':
    BZIP2_MAKEFILE = 'Makefile-libbz2_dylib'
else:
    BZIP2_MAKEFILE = 'Makefile-libbz2_so'

RECIPES['bzip2'] = [{
    'version': '1.0.5',
    'hash': 'edda8d2c38106dfd88a2fc4610d2aa85d869effc0a30f206c78100bf99703585',
    'commands': [
        [MAKE, 'install', 'PREFIX=%s' % LOCAL],
        [MAKE, 'clean'],
        [MAKE, '-f', BZIP2_MAKEFILE, 'all', 'PREFIX=%s' % LOCAL]
        ]
    }]

# ------------------------------------------------------------------------------
# cacerts
# ------------------------------------------------------------------------------

RECIPES['cacerts'] = [{
    'version': '2012.06.28',
    'hash': '0e59b432b607c9af7c1cc18e4c3e13213b0d1c87bb786623f4978897beeb2106',
    'type': 'resource'
    }]

# ------------------------------------------------------------------------------
# go
# ------------------------------------------------------------------------------

go_install_path = join(LOCAL, 'go')

def after_go_install():
    mkdir(go_install_path)
    copytree(join('..', 'pkg'), join(go_install_path, 'pkg'))
    copytree(join('..', 'src'), join(go_install_path, 'src'))

RECIPES['go'] = [{
    'version': '13728',
    'hash': '6a0a6e10b5caa6310bb04c8ee3a4133ad598604e6fbc9d321c75d621e5da030e',
    'before': lambda: chdir('src'),
    'after': after_go_install,
    'env': {
        'GOROOT_FINAL': go_install_path
    },
    'commands': [
        ['./make.bash']
        ]
    }]

# ------------------------------------------------------------------------------
# golibs
# ------------------------------------------------------------------------------

RECIPES['golibs'] = [{
    'type': 'git',
    'requires': ['go'],
    'path': 'third_party/golibs',
    'before': lambda: chdir('src'),
    'commands': [
        ['go', 'install', '-v', 'snappy']
        ]
    }]

# ------------------------------------------------------------------------------
# makeucd
# ------------------------------------------------------------------------------

MAKEUCD_SCRIPT = join(ENVIRON, 'makeucd')
UCD_DATA_FILE = join(SHARE, 'ucd', 'UnicodeData.txt')
UCD_JS_FILE = join(SRC, 'coffee', 'ucd.js')

RECIPES['makeucd'] = [{
    'requires': ['ucd'],
    'type': 'makelike',
    'depends': [MAKEUCD_SCRIPT],
    'outputs': [UCD_JS_FILE],
    'commands': [
        [MAKEUCD_SCRIPT, UCD_DATA_FILE, UCD_JS_FILE]
        ]
    }]

# ------------------------------------------------------------------------------
# pylibs
# ------------------------------------------------------------------------------

RECIPES['pylibs'] = [{
    'type': 'git',
    'path': 'third_party/pylibs',
    'after': lambda: rmdir('build'),
    'commands': [
        [sys.executable, 'setup.py', 'build_ext', '-i']
        ]
    }]

# ------------------------------------------------------------------------------
# tavutil
# ------------------------------------------------------------------------------

TAVUTIL_ROOT = join(THIRD_PARTY, 'tavutil')
TAVUTIL_PYX_FILES = glob(join(TAVUTIL_ROOT, 'tavutil', '*.pyx'))
TAVUTIL_PYX_FILES.remove(join(TAVUTIL_ROOT, 'tavutil', 'darwinsandbox.pyx'))

TAVUTIL_SO_FILES = [
    file.rsplit('.pyx', 1)[0] + '.so' for file in TAVUTIL_PYX_FILES
    ]

RECIPES['tavutil'] = [{
    'type': 'makelike',
    'before': lambda: chdir(TAVUTIL_ROOT),
    'depends': TAVUTIL_PYX_FILES + [join(TAVUTIL_ROOT, 'setup.py')],
    'outputs': TAVUTIL_SO_FILES,
    'after': lambda: rmdir('build'),
    'commands': [
        lambda: [remove(path) for path in TAVUTIL_SO_FILES if isfile(path)],
        [sys.executable, 'setup.py', 'build_ext', '-i']
        ]
    }]

# ------------------------------------------------------------------------------
# ucd
# ------------------------------------------------------------------------------

RECIPES['ucd'] = [{
    'version': '6.1.0',
    'hash': '981244922d09ef634cbcca22ca341ececafdd33551f21645ff9190e97ed5e230',
    'type': 'resource'
    }]
