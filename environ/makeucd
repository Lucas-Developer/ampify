#! /usr/bin/env python

# No Copyright (-) 2010 The Ampify Authors. This file is under the
# Public Domain license that can be found in the root LICENSE file.

"""
========================
Javascript UCD Generator
========================

This script generates a ``ucd.js`` file from the Unicode Character Database
(UCD).

Currently works for Unicode 5.2.

"""

from __future__ import with_statement

import sys

data = {}
ranges = []
in_range = False

if not len(sys.argv[1:]) == 2:
    print "Usage: makeucd <path-to-unicodedata> <output-file>"
    sys.exit()

with open(sys.argv[1], 'rb') as ucd:
    for line in ucd:
        line = line.split(';')
        codepoint = int(line[0], 16)
        name, category = line[1:3]
        if in_range:
            ranges[-1].extend([codepoint, category])
            in_range = False
        if name.endswith('First>'):
            ranges.append([codepoint])
            in_range = True
        if category not in data:
            data[category] = []
        data[category].append(codepoint)

groupings = {
    "CasedLetters": "Ll | Lt | Lu",
    "Letters": "Ll | Lm | Lo | Lt | Lu",
    "Marks": "Mc | Me | Mn",
    "Numbers": "Nd | Nl | No",
    "Other": "Cc | Cf | Cn | Co | Cs",
    "Punctuations": "Pc | Pd | Pe | Pf | Pi | Po | Ps",
    "Symbols": "Sc | Sk | Sm | So",
    "Separators": "Zl | Zp | Zs"
    }

output = []; out = output.append
def trim(output):
    output[-1] = output[-1][:-2] + '\n'

categories = sorted(data.keys())
groups = sorted(groupings.keys())
last_category = len(categories) - 1

out("""
// Generated by makeucd
//
// DO NOT EDIT

(function () {

var version = "5.2.0",
    Categories,
    CategoryRanges,
    CategoryNames,
""")

for group in groups:
    out("    %s,\n" % group)

for idx, category in enumerate(categories):
    out("    %s = %i,\n" % (category, 1 << idx))

out("    Unknown = Cn = 0;\n\n")
out("CategoryNames = {\n")
out('    0: "Unknown",\n')

for idx, category in enumerate(categories):
    out('    %s: "%s",\n' % (1 << idx, category))

trim(output)
out("};\n\n")
out("Categories = {")

for idx, category in enumerate(categories):
    out("\n    // General Category: %s\n" % category)
    codepoints = sorted(data[category])
    for cp in codepoints:
        out("    %s: %s,\n" % (cp, category))

trim(output)
out("};\n\n")
out("CategoryRanges = [\n")

for catrange in ranges:
    out("    [%i, %i, %s],\n" % tuple(catrange))

trim(output)
out("];\n")

out("""
// Various grouped general categories.

""")

for group in groups:
    out("%s = %s;\n" % (group, groupings[group]))

out("""
if ((typeof process !== "undefined") && (process !== null)) {
    ucd = exports;
} else {
    this.ucd = ucd = {};
}

ucd.version = version;
ucd.Categories = Categories;
ucd.CategoryRanges = CategoryRanges;
ucd.CategoryNames = CategoryNames;
""")

for category in categories:
    # print "    %s = ucd.%s," % (category, category)
    out("ucd.%s = %s;\n" % (category, category))

for group in groups:
    # print "    %s = ucd.%s," % (group, group)
    out("ucd.%s = %s;\n" % (group, group))

out("ucd.Unknown = Unknown;")

out("""

})();
""")

ucd_file = open(sys.argv[2], 'wb')
ucd_file.write(''.join(output))
ucd_file.close()
